'use strict';angular.module('appRoutes',[]);angular.module('Login',[]);angular.module('Candidato',[]);angular.module('Selecao',[]);angular.module('Etapa',[]);angular.module('PETiano',[]);angular.module('Util',[]);angular.module('SideNav',[]);angular.module('RecordOfMeeting',[]);angular.module('Selecao',[]);angular.module('Calendar',[]);angular.module('Finance',[]);angular.module('templates',[]);angular.module('AgendaPoint',[]);angular.module('AbsentOrLate',[]);angular.module('Filters',[]);angular.module('Ideas',[]);var app=angular.module('petutility',['ui.router','ngCookies','ngResource','ngFileUpload','appRoutes','Login','Selecao','Etapa','Candidato','ui.calendar','appRoutes','PETiano','Util','RecordOfMeeting','SideNav','Finance','Calendar','templates','AgendaPoint','AbsentOrLate','Filters','Ideas']);app.run(function($rootScope,$state,Request,$resource,$timeout,UserService,PETianoService,CandidatoService){PETianoService.getAllPETianos(null);$rootScope.UserService=UserService;$rootScope.CandidatoService=CandidatoService;$rootScope.stateFac=$state;$rootScope.$on('$stateChangeStart',function(event,toState,toParams,fromState,fromParams,options){if(!UserService.isAuthenticated()&&!CandidatoService.isAuthenticated()&&toState.data.authenticate){event.preventDefault();$state.transitionTo('login')}if(CandidatoService.isAuthenticated()&&!toState.data.authenticate){event.preventDefault();$state.transitionTo('candidato.index')}if(UserService.isAuthenticated()&&!toState.data.authenticate){event.preventDefault();$state.transitionTo('logged.calendar')}})});'use strict';var app=angular.module('appRoutes');app.config(function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise('/calendar');$stateProvider.state('login',{url:'/login',templateUrl:'public/templates/login.html',controller:'LoginController',data:{displayNav:false,authenticate:false}}).state('logged',{url:'',template:'<ui-view/>',abstract:'true',data:{authenticate:true,displayNav:false},resolve:{invoke:function invoke(){window.setTimeout(function(){$('.button-collapse').sideNav({menuWidth:300,closeOnClick:window.innerWidth<=992})},0)}}}).state('logged.recordOfMeeting',{url:'/recordOfMeeting',templateUrl:'public/templates/recordOfMeeting.html',controller:'RecordOfMeetingController',data:{tabName:'recordOfMeeting',tabDisplayName:'Reuni\xE3o',displayNav:true,authenticate:true}}).state('logged.calendar',{url:'/calendar',templateUrl:'public/templates/calendar.html',controller:'CalendarController',data:{tabName:'calendar',tabDisplayName:'Calend\xE1rio',displayNav:true,authenticate:true}}).state('logged.finance',{url:'/finance',templateUrl:'public/templates/finance.html',controller:'financeController',data:{tabName:'finance',tabDisplayName:'Financeiro',displayNav:true,authenticate:true}}).state('logged.profile',{url:'/profile',templateUrl:'public/templates/profile.html',controller:'ProfileController',data:{displayNav:false,authenticate:true}}).state('logged.ideas',{url:'/ideas',templateUrl:'public/templates/ideas.html',controller:'IdeasController',data:{tabName:'ideas',tabDisplayName:'Ideias',displayNav:true,authenticate:true}}).state('logged.selecao',{url:'',template:'<ui-view/>',data:{displayNav:false,authenticate:true}}).state('logged.selecao.list',{url:'/selecao',templateUrl:'public/templates/selecaoDisplay.html',controller:'SelecaoDisplayController',data:{tabName:'selecaoDisplay',tabDisplayName:'Sele\xE7\xE3o',displayNav:true,authenticate:true}}).state('logged.selecao.detail',{url:'/selecao/{selecaoId:int}',templateUrl:'public/templates/selecaoDetail.html',controller:'SelecaoDetailController',data:{displayNav:false,authenticate:true}}).state('logged.selecao.etapa',{url:'/selecao/{selecaoId:int}/etapa/{etapaId:int}',templateUrl:'public/templates/etapa.html',controller:'EtapaController',data:{displayNav:false,authenticate:true}}).state('signup',{url:'/signup',templateUrl:'public/templates/signup.html',controller:'SignupController',data:{authenticate:false}}).state('candidato',{url:'/candidato',template:'<ui-view/>',abstract:'true',data:{authenticate:true,displayNav:false},resolve:{invoke:function invoke(){window.setTimeout(function(){$('.button-collapse').sideNav({menuWidth:300,closeOnClick:window.innerWidth<=992})},0)}}}).state('candidato.index',{url:'',templateUrl:'public/templates/candidato/index.html',controller:'CandidatoController',data:{tabName:'index',tabDisplayName:'Status',displayNav:true,authenticate:true}}).state('candidato.selecao',{url:'/selecao',templateUrl:'public/templates/candidato/selecao.html',controller:'CandidatoController',data:{tabName:'selecao',tabDisplayName:'Selecao',displayNav:true,authenticate:true}})});'use strict';angular.module('Selecao').directive('candidatoList',function(){return{restrict:'E',scope:{candidatos:'=',etapas:'=',toDelete:'=',selecaoId:'='},controller:function controller($scope,$http){$scope.openCandidatoListModal=function(){$('#candidatoListModal').openModal()};$scope.move=function(etapa){$('#candidatoListModal').closeModal();var toMove=$scope.candidatos;if(!$scope.selectAll)toMove=toMove.filter(function(candidato){return candidato.selected});function moveCandidato(candidato){$http({method:'PUT',url:'/api/selecao/'+$scope.selecaoId+'/etapa/'+etapa.Id+'/candidato/'+candidato.Id}).then(function(){if($scope.toDelete)$scope.candidatos.splice($scope.candidatos.findIndex(function(val){return val.Id==candidato.Id}),1)})}toMove.forEach(moveCandidato)};$scope.aprove=function(){$('#candidatoListModal').closeModal();var toMove=$scope.candidatos;if(!$scope.selectAll)toMove=toMove.filter(function(candidato){return candidato.selected});function aproveCandidato(candidato){$http({method:'POST',url:'/api/selecao/'+$scope.selecaoId+'/aprovado/'+candidato.Id}).then(function(){$scope.candidatos.splice($scope.candidatos.findIndex(function(val){return val.Id==candidato.Id}),1)})}toMove.forEach(aproveCandidato)}},templateUrl:'public/templates/directives/candidatoList.html'}});'use strict';var app=angular.module('Calendar');app.service('CalendarService',function($rootScope,$resource,Request){});'use strict';var app=angular.module('Candidato');app.service('CandidatoService',function($rootScope,$cookies,$resource,$state,Request){var $scope=this;$scope.user={};$scope.reset=function(){$scope.user={};$cookies.remove('candidato')};$scope.isAuthenticated=function(){if($cookies.get('candidato')){return true}else{return false}};$scope.isValidated=function(){return!!$scope.user.Id};$scope.set=function(user){$scope.user=user};try{var obj={tId:$cookies.get('candidato')};$scope.set(obj);Request.send('get',$resource('/api/candidato/login'))({}).then(function(data){$scope.set(data);$rootScope.user=data},function(){$scope.reset()})}catch(err){$scope.reset()}});'use strict';angular.module('PETiano').service('PETianoService',function(Request,$resource){var $scope=this;$scope.resource=$resource;var users={},allRequested=false;$scope.getPETianoById=function(Id,callback){if(!!users[Id])return callback(null,users[Id]);Request.send('get',$scope.resource('/api/petiano/:petianodId',{petianoId:Id}))({}).then(function(data){users[Id]=data;return callback&&callback(null,users[Id])},function(err){return callback&&callback(err)})};$scope.getAllPETianos=function(callback){if(allRequested)return callback(null,users);Request.send('query',$scope.resource('/api/petiano'))({}).then(function(data){for(var idx=0;idx<data.length;++idx){var petiano=data[idx];users[petiano.Id]=petiano}allRequested=true;return callback&&callback(null,users)},function(err){return callback&&callback(err)})};$scope.updatePETiano=function(PETiano){users[PETiano.Id]=PETiano}});'use strict';var app=angular.module('Finance');app.service('PaymentService',['$cookies','$resource','Request',function($cookies,$resource,Request){console.log('in function');console.log(Request);var $scope=this;$scope.set=function(payments){$scope.payments=payments};$scope.reset=function(){$scope.payments={}}}]);'use strict';var app=angular.module('PETiano');app.service('UserService',function($rootScope,$cookies,$resource,$state,Request){var $scope=this;$scope.user={};$scope.reset=function(){$scope.user={};$cookies.remove('user')};$scope.isAuthenticated=function(){if($cookies.get('user')){return true}else{return false}};$scope.isValidated=function(){return!!$scope.user.Id};$scope.set=function(user){$scope.user=user};try{var obj={tId:$cookies.get('user')};$scope.set(obj);Request.send('get',$resource('/api/petiano/login'))({}).then(function(data){$scope.set(data);$rootScope.user=data},function(){$scope.reset()})}catch(err){$scope.reset()}});'use strict';angular.module('Calendar').controller('CalendarController',function($scope,uiCalendarConfig,CalendarAPI,$http,$timeout,$compile,$filter){$timeout(function(){$('.datepicker').pickadate({selectMonths:true,selectYears:15,container:'body'})},0,true);$scope.eventMouseOver=function(event,element,view){element.attr({'tooltip':event.title,'tooltip-append-to-body':true});$compile(element)($scope)};$scope.uiConfig={calendar:{height:700,editable:false,displayEventTime:true,header:{right:'today prev,next'}}};$scope.tEvents=[];$scope.eventsF=function(start,end,timezone){var s=new Date(start);var e=new Date(end);console.log(s,e);$http({method:'GET',url:'/api/calendar',params:{s:s,e:e}}).then(function(result){$scope.tEvents.splice(0,$scope.tEvents.length);var ret=result.data;for(var i=0;i<ret.length;++i){var hour=ret[i].time.substring(0,2);var minutes;var stage;if(parseInt(hour)<10){hour=hour.substring(0,1);minutes=ret[i].time.substring(2,4);stage=ret[i].time.substring(4)}else{minutes=ret[i].time.substring(3,5);stage=ret[i].time.substring(5)}if(stage==='pm'){if(hour!=12)hour=parseInt(hour)+12;hour=hour.toString()}ret[i].start=new Date(ret[i].start.substring(0,4),(parseInt(ret[i].start.substring(5,7))-1).toString(),ret[i].start.substring(8,10),hour,minutes)}$.merge($scope.tEvents,ret)},function(err){})};$scope.uiConfig.calendar.dayNamesShort=['Seg','Ter','Qua','Qui','Sex','Sab','Dom'];$scope.uiConfig.calendar.monthNames=['Janeiro','Fevereiro','Mar\xE7o','Abril','Maio','Junho','Julho','Agosto','Setembro','Outubro','Novembro','Dezembro'];$scope.createEvent=function(eventTitle){var eventDate=$('#eventDateFieldCreate').val();var eventTime=$('#eventTimeFieldCreate').val();console.log(eventDate);console.log(eventTime);var hour=eventTime.substring(0,2);var minutes;var stage;if(parseInt(hour)<10){hour=hour.substring(0,1);minutes=eventTime.substring(2,4);stage=eventTime.substring(4)}else{minutes=eventTime.substring(3,5);stage=eventTime.substring(5)}if(stage==='pm'){if(hour!=12)hour=parseInt(hour)+12;hour=hour.toString()}var from=eventDate.split('/');var eventDateObject=new Date(from[2],from[1]-1,from[0],hour,minutes);var t={title:eventTitle,start:eventDateObject,time:eventTime};var tIdx=$scope.tEvents.length;$scope.tEvents.push(t);var eventDateObjectBD=new Date(from[2],from[1]-1,from[0],parseInt(hour-3).toString(),minutes);var tBD={title:eventTitle,start:eventDateObjectBD,time:eventTime};$http({method:'POST',url:'/api/calendar/save',data:tBD}).then(function(suc){$scope.tEvents[$scope.tEvents.length-1].Id=suc.data.Id},function(err){$scope.tEvents.splice(tIdx,1)})};$scope.idx=-1;$scope.editEvent=function(){var ref=$scope.tEvents[$scope.idx];ref.title=$('#eventTitleFieldEdit').val();ref.time=$('#eventTimeFieldEdit').val();var date=$('#eventDateFieldEdit').val();var hour;var minutes;if(ref.time.charAt(2)==':'){hour=ref.time.substring(0,2);minutes=ref.time.substring(3,5);if(ref.time.charAt(5)=='p'){if(hour!=12)hour=parseInt(hour)+12;hour=hour.toString()}}else{hour='0'+ref.time.substring(0,1);minutes=ref.time.substring(2,4)}if(date.charAt(2)=='/'){ref.start=new Date(date.substring(6),(parseInt(date.substring(3,5))-1).toString(),date.substring(0,2),hour,minutes);var dateBD=new Date(date.substring(6),(parseInt(date.substring(3,5))-1).toString(),date.substring(0,2),parseInt(hour-3).toString(),minutes)}else{ref.start=new Date(date.substring(5),(parseInt(date.substring(2,4))-1).toString(),'0'+date.substring(0,1),hour,minutes);var dateBD=new Date(date.substring(5),(parseInt(date.substring(2,4))-1).toString(),'0'+date.substring(0,1),parseInt(hour-3).toString(),minutes)}$http({method:'PUT',url:'api/calendar/update/'+ref.Id,params:{eventId:ref.Id},data:{eventTitle:ref.title,start:dateBD,time:ref.time}}).then(function(suc){Materialize.toast('Evento editado com sucesso!',4000)},function(err){Materialize.toast('Um erro ocorreu.',4000)})};$scope.removeEvent=function(){var tempId=$scope.tEvents[$scope.idx].Id;$scope.tEvents.splice($scope.idx,1);$http({method:'DELETE',url:'/api/calendar/delete/'+tempId,params:{Id:tempId}}).then(function(suc){Materialize.toast('Evento deletado com sucesso!',4000)},function(err){Materialize.toast('Um erro ocorreu.',4000)})};$scope.openCreateEventModal=function(){$('#modalCreateEvents').openModal();Materialize.updateTextFields()};$scope.openEventsModal=function(){$('#modalEvents').openModal()};$scope.openEditEventModal=function(idx){$scope.idx=idx;$('#modalEditEvent').openModal();$('#eventTitleFieldEdit').val($scope.tEvents[idx].title);$('#eventDateFieldEdit').val($filter('date')($scope.tEvents[idx].start,'d/MM/y'));$('#eventTimeFieldEdit').val($scope.tEvents[idx].time);Materialize.updateTextFields()};$scope.validateRemoveEvent=function(idx){$('#modalText').html('Tem certeza que deseja remover o evento '+$scope.tEvents[idx].title+'?');$scope.idx=idx;$('#modalRemoveEvent').openModal()};$scope.eventSources=[$scope.tEvents,$scope.eventsF];$('#eventTimeFieldCreate').timepicker({'scrollDefault':'now'});$('#eventTimeFieldEdit').timepicker({'scrollDefault':'now'})});'use strict';angular.module('Candidato').controller('CandidatoController',function($rootScope,$scope,$timeout,CandidatoAPI,SelecaoAPI,EtapaAPI,Upload){$scope.candidato={};$scope.selecao={};$scope.etapa={};$scope.iAgree=false;$scope.isTimeouting=true;$timeout(function(){angular.copy($rootScope.user,$scope.candidato);if($scope.candidato.EtapaId){EtapaAPI.get({selecaoId:$scope.candidato.SelecaoId,etapaId:$scope.candidato.EtapaId},function(etapa){$scope.etapa=etapa},function(err){console.log(err)})}SelecaoAPI.get({},function(selecao){$scope.selecao=selecao},function(err){console.log(err)});$scope.isTimeouting=false},1000);function updateCandidato(candidato){$scope.candidato=candidato;$timeout(function(){angular.copy($scope.candidato,$rootScope.user)},1000)}$scope.logout=function(){CandidatoAPI.logout()};$scope.update=function(){Upload.upload({url:'/api/candidato/update',data:{Curriculum:$scope.candidato.Curriculum,ScholarHistoric:$scope.candidato.ScholarHistoric}}).then(function(res){updateCandidato(res.data)},function(err){console.log(err)},function(evt){})};$scope.join=function(){SelecaoAPI.participar({selecaoId:$scope.selecao.Id},{},function(candidato){updateCandidato(candidato)},function(err){console.log(err)})}});'use strict';angular.module('Etapa').controller('EtapaController',function($scope,$http,SelecaoAPI,EtapaAPI,$stateParams){$scope.etapa=EtapaAPI.get({selecaoId:$stateParams.selecaoId,etapaId:$stateParams.etapaId});$scope.etapas=EtapaAPI.query({selecaoId:$stateParams.selecaoId});$scope.closeEtapa=function(){$scope.etapa.CanUpdate=false;$scope.etapa.$save()};$scope.openEtapa=function(){$scope.etapa.CanUpdate=true;$scope.etapa.$save()}});'use strict';angular.module('Finance').controller('financeController',function(Upload,PenaltyAPI,PaymentAPI,SpendingAPI,PigpetAPI,PocketAPI,UserService,PETianoService,$scope,$timeout){$scope.payments=[];$scope.PETianosList=[];$scope.penalties=[];var monthNames={'1':'Janeiro','2':'Fevereiro','3':'Mar\xE7o','4':'Abril','5':'Maio','6':'Junho','7':'Julho','8':'Agosto','9':'Setembro','10':'Outubro','11':'Novembro','12':'Dezembro'};var status={'1':true,'2':true,'3':true};var instrumentValues={'Transfer\xEAncia':1,'Dinheiro':2,'Cr\xE9dito':3};$scope.acceptedColor='green';$scope.pendingColor='yellow darken-1';$scope.refusedColor='red';$scope.checkIfHasPhoto=function(photo){return!(angular.isUndefined(photo)||photo==null)};$scope.selectStatus=function(type){switch(type){case 1:status[1]=!status[1];$scope.acceptedColor=status[1]?'green':'grey';break;case 2:status[2]=!status[2];$scope.refusedColor=status[2]?'red':'grey';break;case 3:status[3]=!status[3];$scope.pendingColor=status[3]?'yellow darken-1':'grey';break;}$scope.filterPayments()};$scope.isValidePaymentStatus=function(status){return status!=1};$scope.canAcceptPenalty=function(status){return $scope.isPigpetAccount&&status==2};$scope.filterPayments=function(){$scope.payments=[];for(var index=0;index<$scope.dataset.length;index+=1){var p=$scope.dataset[index];if(status[p.Status]){p=filterSolePayment(p);$scope.payments.push(p)}}};var filterSolePayment=function filterSolePayment(p){switch(p.Status){case 1:p.Icon='thumb_up';p.IconColor='green';break;case 2:p.Icon='thumb_down';p.IconColor='red';break;case 3:p.Icon='query_builder';p.IconColor='yellow darken-1';break;}switch(p.Type){case 1:p.TypeText='Multa';break;case 2:p.TypeText='PigPET';break;case 3:p.TypeText='Cr\xE9dito';break;}switch(p.Instrument){case 1:p.InstrumentName='Transfer\xEAncia';break;case 2:p.InstrumentName='Dinheiro';break;case 3:p.InstrumentName='Cr\xE9dito';break;}return p};$scope.organizePenalties=function(){for(var index=0;index<$scope.penalties.length;index+=1){$scope.penalties[index]=$scope.organizeSolePenalty($scope.penalties[index])}};PETianoService.getAllPETianos(function(err,data){if(err)return;$scope.PETianosList=data;$scope.organizePenalties()});$scope.organizeSolePenalty=function(p){if(p.Status==1){p.StatusIcon='thumb_up';p.StatusIconColor='green'}else{p.StatusIcon='query_builder';p.StatusIconColor='yellow darken-1'}for(var petianoId in $scope.PETianosList){if(petianoId==p.PETianoId){p.PETianoName=$scope.PETianosList[petianoId].Name}}return p};$scope.organizeSpendings=function(){for(var index=0;index<$scope.spendings.length;index+=1){$scope.spendings[index]=$scope.organizeSoleSpending($scope.spendings[index])}};$scope.organizeSoleSpending=function(s){if(s.Status==1){s.StatusIcon='thumb_up';s.StatusIconColor='green'}else if(s.Status==2){s.StatusIcon='query_builder';s.StatusIconColor='yellow darken-1'}else{s.StatusIcon='thumb_down';s.StatusIconColor='red'}return s};var loadPayments=function loadPayments(isPigPet){if(isPigPet){$scope.getPendingPaymentsPigPet()}else{$scope.getPayments()}};var loadPenalties=function loadPenalties(isPigPet){if(isPigPet)$scope.getAllPenalties();else $scope.getPenalties()};var loadPigPet=function loadPigPet(){$scope.getPigPetBalance()};PocketAPI.getPockets(function(err,data){if(err)$scope.errMsg=err.status+' - '+err.data.message;else{$scope.errMsg=null;$scope.pockets=data.map(function(element){element.MonthName=monthNames[element.Month];return element})}});SpendingAPI.getSpendings(function(err,data){if(err)$scope.errMsg=err.status+' - '+err.data.message;else{$scope.errMsg=null;$scope.spendings=data;$scope.organizeSpendings()}});$scope.paymentToUpdate={};var toDateInputValue=function toDateInputValue(date){return date.substring(0,10)};$scope.openUpdatePaymentModal=function(p){p.Date=toDateInputValue(p.Date);$scope.paymentToUpdate=p;$('#updatePaymentModal').openModal()};$scope.refusePaymentModalTrigger=function(id){$scope.setRefusingPaymentId(id);$('#refusePaymentModal').openModal()};$scope.refusingPaymentId=-1;$scope.setRefusingPaymentId=function(id){$scope.refusingPaymentId=id};var updatePaymentScope=function updatePaymentScope(payment){for(var index=0;index<$scope.payments.length;index+=1){if($scope.payments[index].Id==payment.Id){$scope.payments[index]=payment}}};$scope.refusePayment=function(justification){var pay={Id:$scope.refusingPaymentId,RefusedJustification:justification,Status:2};Upload.upload({url:'/api/payment/updatePayment',data:pay}).then(function(data){var p=filterSolePayment(data.data);updatePaymentScope(p)},function(err){console.log('error in update payment')},function(evt){console.log('fazendo upload')})};$scope.getPayments=function(){PaymentAPI.getPayments(function(err,data){if(err)$scope.errMsg=err.status+' - '+err.data.message;else{$scope.errMsg=null;$scope.dataset=data;$scope.filterPayments()}})};$scope.createPayment=function(value,date,notes,instrument,photo){var type=$('#paymenttype').val();var pay={Type:type,Value:value,Date:date,Status:3,Notes:notes,Instrument:instrument,PETianoId:UserService.user.Id,Photo:photo};Upload.upload({url:'/api/payment/createPayment',data:pay}).then(function(data){var p=filterSolePayment(data.data);$scope.payments.push(p)},function(err){console.log('error in create payment');console.log(err)},function(evt){console.log('fazendo upload')})};$scope.acceptPayment=function(id){var pay={Id:id};PaymentAPI.acceptPayment(pay,function(done,data){var p=filterSolePayment(data.payment);updatePaymentScope(data.payment);$scope.pigPetBalance=data.pigpet.Balance},function(err){console.log('error in acceptPayment')})};$scope.updatePayment=function(){var type=$('#updatepaymenttype').val();var pay=$scope.paymentToUpdate;if(type!='')pay.Type=type;Upload.upload({url:'/api/payment/updatePayment',data:pay}).then(function(data){updatePaymentScope(pay)},function(err){console.log('error in create payment')},function(evt){console.log('fazendo upload')})};var deletePaymentFromScope=function deletePaymentFromScope(id){for(var index=0;index<$scope.payments.length;index+=1){if($scope.payments[index].Id==id){$scope.payments.splice(index,1)}}};$scope.deletePayment=function(id){var pay={Id:id};PaymentAPI.deletePayment(pay,function(done){deletePaymentFromScope(pay.Id)},function(err){console.log('error in delete payment')})};$scope.getPigPetBalance=function(){PigpetAPI.getPigPetBalance(function(err,data){if(err)$scope.errMsg=err.status+' - '+err.data.message;else{$scope.errMsg=null;$scope.pigPetBalance=data.Balance}})};$scope.updatePigPetBalance=function(value,justification){var parameters={pigpet:{Id:1,Balance:value},reason:justification};PigpetAPI.updatePigPetBalance(parameters,function(err,data){$scope.pigPetBalance=data.Balance},function(err){console.log('error in update pigpet balance')})};$scope.getPendingPaymentsPigPet=function(){PaymentAPI.getPendingPaymentsPigPet(function(err,data){if(err){$scope.errMsg=err.status+' - '+err.data}else{$scope.errMsg=null;$scope.dataset=data;$scope.filterPayments()}})};$scope.getPenalties=function(){PenaltyAPI.getPenalties(function(err,data){if(err)$scope.errMsg=err.status+' - '+err.data.message;else{$scope.penalties=data;$scope.organizePenalties()}})};$scope.getAllPenalties=function(){PenaltyAPI.getAllPenalties(function(err,data){if(err)$scope.errMsg=err.status+' - '+err.data.message;else{$scope.penalties=data;$scope.organizePenalties()}})};var getEmailOfPETiano=function getEmailOfPETiano(id){for(var petianoid in $scope.PETianosList){if(petianoid==id){return $scope.PETianosList[petianoid].Email}}};$scope.createPenalty=function(value,date,justification,petianoid){var email=getEmailOfPETiano(petianoid);var parameters={penalty:{Value:value,Date:date,Status:2,PenaltyJustification:justification,PETianoId:petianoid},PETianoEmail:email};PenaltyAPI.createPenalty(parameters,function(done,data){var p=$scope.organizeSolePenalty(data);$scope.penalties.push(p)},function(err){console.log('error in createPenalty')})};$scope.penaltyToUpdate={};$scope.openUpdatePenaltyModal=function(p){$scope.penaltyToUpdate=p;$('#updatePenaltyModal').openModal()};var updatePenaltyScope=function updatePenaltyScope(penalty){for(var index=0;index<$scope.penalties.length;index+=1){if($scope.penalties[index].Id==penalty.Id){penalty=$scope.organizeSolePenalty(penalty);$scope.penalties[index]=penalty}}};var updatePenaltyIdScope=function updatePenaltyIdScope(id){for(var index=0;index<$scope.penalties.length;index+=1){if($scope.penalties[index].Id==id){$scope.penalties[index].Status=1;$scope.penalties[index]=$scope.organizeSolePenalty($scope.penalties[index])}}};$scope.updatePenalty=function(){var penalty=$scope.penaltyToUpdate;PenaltyAPI.updatePenalty(penalty,function(err,data){updatePenaltyScope(data)},function(err){console.log('error in update penalty')})};$scope.changePenaltyStatus=function(id){var penalty={Id:id,Status:1};PenaltyAPI.changePenaltyStatus(penalty,function(err,data){updatePenaltyIdScope(id)},function(err){console.log('error in change penalty status')})};var deletePenaltyFromScope=function deletePenaltyFromScope(p){for(var index=0;index<$scope.penalties.length;index+=1){if($scope.penalties[index].Id==p.Id){$scope.penalties.splice(index,1)}}};$scope.deletePenalty=function(id){var penalty={Id:id};PenaltyAPI.deletePenalty(penalty,function(){deletePenaltyFromScope(penalty)},function(err){console.log('error in delete penalty')})};$scope.createSpending=function(value,date,description){var status=$scope.isPigpetAccount?1:2;var spending={Description:description,Value:value,Date:date,Status:status};SpendingAPI.createSpending(spending,function(done,data){var s=$scope.organizeSoleSpending(data);$scope.spendings.push(s);if(status==1){$scope.pigPetBalance=parseFloat($scope.pigPetBalance)-parseFloat(value);;}},function(err){console.log('error in create spending')})};var deleteSpendingFromScope=function deleteSpendingFromScope(spending){for(var index=0;index<$scope.spendings.length;index+=1){if($scope.spendings[index].Id==spending.Id){$scope.spendings.splice(index,1)}}};$scope.deleteSpending=function(id,value,status){var spending={Value:value,Status:status,Id:id};SpendingAPI.deleteSpending(spending,function(){deleteSpendingFromScope(spending);if(spending.Status==1){$scope.pigPetBalance=parseFloat($scope.pigPetBalance)+parseFloat(value)}},function(err){console.log('error in delete spending')})};$scope.acceptSpending=function(id,value){var spending={Id:id,Value:value};SpendingAPI.acceptSpending(spending,function(done,data){acceptSpendingScope(id);$scope.pigPetBalance=data.pigpet.Balance},function(err){console.log('error in acceptSpending')})};var acceptSpendingScope=function acceptSpendingScope(id){for(var index=0;index<$scope.spendings.length;index+=1){if($scope.spendings[index].Id==id){$scope.spendings[index].Status=1;$scope.spendings[index]=$scope.organizeSoleSpending($scope.spendings[index])}}};var updateSpendingScope=function updateSpendingScope(spending){for(var index=0;index<$scope.spendings.length;index+=1){if($scope.spendings[index].Id==spending.Id){spending=$scope.organizeSoleSpending(spending);$scope.spendings[index]=spending}}};$scope.spendingToUpdateId=-1;$scope.openUpdateSpendingModal=function(id,spending){$scope.spendingToUpdateId=id;$('#updateSpendingModal').openModal()};$scope.updateSpending=function(value,date,description){var spending={Id:$scope.spendingToUpdate,Description:description,Value:value,Date:date};SpendingAPI.updateSpending(spending,function(err,data){data.Status=2;updateSpendingScope(data)},function(err){console.log('error in updateSpending')})};$scope.editPocketId=-1;$scope.editPocketOpenModal=function(id){$scope.editPocketId=id;$('#editPocketModal').openModal()};var makeValidDate=function makeValidDate(date){date=date.substring(6,10)+'-'+date.substring(3,5)+'-'+date.substring(0,2);return new Date(date)};$scope.createPocket=function(month,year,date){date=makeValidDate(date);var pocket={Month:month,Year:year,Date:date};PocketAPI.createPocket(pocket,function(done,data){data.MonthName=monthNames[data.Month];$scope.pockets.push(data)},function(err){console.log('error in create pocket')})};var updatePocketScope=function updatePocketScope(pocket){for(var index=0;index<$scope.pockets.length;index+=1){if($scope.pockets[index].Id==pocket.Id){pocket.MonthName=monthNames[pocket.Month];$scope.pockets[index]=pocket}}};$scope.updatePocket=function(month,year,date){var pocket={Id:$scope.editPocketId,Month:month,Year:year,Date:date};PocketAPI.updatePocket(pocket,function(err,data){updatePocketScope(data)},function(err){console.log('error in update pocket')})};var deletePocketFromScope=function deletePocketFromScope(p){for(var index=0;index<$scope.pockets.length;index+=1){if($scope.pockets[index].Id==p.Id){$scope.pockets.splice(index,1)}}};$scope.deletePocket=function(id){var pocket={Id:id};PocketAPI.deletePocket(pocket,function(){deletePocketFromScope(pocket)},function(err){console.log('error in delete pocket')})};$timeout(function(){$('ul.tabs').tabs();$scope.isPigpetAccount=UserService.user.Profile==2;loadPenalties($scope.isPigpetAccount);loadPayments($scope.isPigpetAccount);loadPigPet();$('select').material_select()},1000)});'use strict';angular.module('Ideas').controller('IdeasController',function($scope,$timeout,$http,IdeasAPI){$scope.ideaForm={Title:'Nome da ideia'};$scope.toDeleteIdea={};$scope.editingIdea={};$scope.ideas=[];$http({method:'GET',url:'/api/ideas/open'}).then(function(result){$scope.canOpen=result.data.open},function(result){$scope.canOpen=true});IdeasAPI.getIdeas(function(err,data){if(err)return;$scope.ideas=data.ideas});$scope.delete=function(idea){$scope.toDeleteIdea=idea;$('#deleteIdeaModal').openModal();$('#deleteModalButton').focus()};$scope.confirmDeleteIdea=function(){$('#deleteIdeaModal').closeModal();var t=$scope.toDeleteIdea;IdeasAPI.deleteIdea($scope.toDeleteIdea.Id,function(err,data){if(err)return;var id=-1;for(var i=0;i<$scope.ideas.length;i++){if($scope.ideas[i].Id==t.Id){id=i;break}}$scope.ideas.splice(id,1);$scope.toDeleteIdea={}})};$scope.addIdea=function(){Materialize.updateTextFields();$('#addIdeaModal').openModal();$('#toAddTitle').focus()};$scope.confirmAddIdea=function(){var idea={};angular.copy($scope.ideaForm,idea);$('#addIdeaModal').closeModal();console.log(idea);IdeasAPI.addIdea(idea.Title,idea.Description,function(err,data){idea.Id=data.Id;$scope.ideas.push(idea)})};$scope.editIdea=function(idea){$scope.editingIdea={};angular.copy(idea,$scope.editingIdea);$('#editIdeaModal').openModal();$timeout(function(){Materialize.updateTextFields()},0);$('#editingDescription').focus()};$scope.confirmEditIdea=function(){$('#editIdeaModal').closeModal();var idea=$scope.editingIdea;IdeasAPI.updateIdea(idea.Id,idea.Title,idea.Description,function(err,data){if(err){return}var id=-1;for(var i=0;i<$scope.ideas.length;i++){if($scope.ideas[i].Id==idea.Id){angular.copy(idea,$scope.ideas[i]);break}}})};$scope.openNewIdeasModal=function(){$('#addNewIdeaModal').openModal();$('ul.tabs').tabs();$('.collapsible').collapsible({});Materialize.updateTextFields()};$scope.addNewIdea=function(){$scope.toAddNewIdea.Status=1;var t=$scope.toAddNewIdea;$scope.toAddNewIdea={};var tIdx=$scope.UsersIdeas.length;$scope.UsersIdeas.push(t);$http({method:'POST',url:'/api/idea/create',data:t}).then(function(result){t.Id=result.data.Id;Materialize.updateTextFields()},function(err){$scope.toAddNewIdea=t;$scope.UsersIdeas.splice(tIdx,1);Materialize.updateTextFields()})}});'use strict';angular.module('Login').controller('LoginController',function($scope,UserAPI,CandidatoAPI,$http){$scope.login=function(user){UserAPI.login(user,function(err1){if(err1){CandidatoAPI.login(user,function(err2){if(err2){$scope.errMsg=err2.status+' - '+err2.data.message}else{$scope.errMsg=null}})}else{$scope.errMsg=null}})};$(document).ready(function(){$('.modal-trigger').leanModal()});$scope.fpass=function(userLogin,userEmail){$http({method:'HEAD',url:'/api/fpass/',params:{userLogin:userLogin,userEmail:userEmail}}).then(function(result){console.log(result);Materialize.toast('Um e-mail com sua senha est\xE1 sendo enviado pra voc\xEA!',4000)},function(err){console.log(err);Materialize.toast('Login e/ou e-mail incorreto(s).',4000)})}});'use strict';angular.module('PETiano').controller('ProfileController',function($rootScope,$scope,$timeout,$http,UserAPI,PETianoService,Upload){$scope.localUser={};$scope.editMode=false;$scope.toggleEditMode=function(){$scope.editMode=true;Materialize.updateTextFields()};$timeout(function(){angular.copy($rootScope.user,$scope.localUser);$timeout(function(){Materialize.updateTextFields()},100)},100,true);$scope.submitChanges=function(){var user={},localUser=$scope.localUser,rootUser=$rootScope.user,files=$scope.files;if(localUser.Name!==rootUser.Name)user.Name=localUser.Name;if(localUser.Email!==rootUser.Email)user.Email=localUser.Email;if(localUser.Cpf!==rootUser.Cpf)user.Cpf=localUser.Cpf;if(localUser.Rg!==rootUser.Rg)user.Rg=localUser.Rg;if(files&&files.Photo)user.Photo=files.Photo;if(files&&files.CoverPhoto)user.CoverPhoto=files.CoverPhoto;$scope.editMode=false;Upload.upload({url:'/api/petiano/update',data:user}).then(function(result){$scope.files={};angular.copy(result.data,$rootScope.user);angular.copy(result.data,$scope.localUser);PETianoService.updatePETiano(result.data)},function(err){$scope.editMode=true})};$scope.openChngPassword=function(){$('#chngPasswordModal').openModal()};$scope.changePassword=function(oldPassword,newPassword){$http({method:'POST',url:'/api/petiano/updatePassword',data:{oldPassword:oldPassword,newPassword:newPassword}}).then(function(response){$('#chngPasswordModal').closeModal();$scope.oldPassword='';$scope.newPassword1='';$scope.newPassword2=''})}});'use strict';angular.module('RecordOfMeeting').controller('RecordOfMeetingController',function($scope,$window,$timeout,$http,RecordOfMeetingAPI,AgendaPointAPI,AbsentOrLateAPI,PETianoService){$http({method:'GET',url:'/api/recordOfMeeting/open'}).then(function(result){$scope.canOpen=result.data.open},function(result){$scope.canOpen=true});$scope.searchYears=Array.apply(null,Array(100)).map(function(_,i){return new Date().getFullYear()-i});$scope.PETianosList={};PETianoService.getAllPETianos(function(err,data){if(err)return;$scope.PETianosList=data});$scope.recordOfMeeting={};RecordOfMeetingAPI.getLastRecordOfMeeting(function(err,data){if(err)return;data.Date=new Date(data.Date);$scope.recordOfMeeting=data;$timeout(function(){$('.collapsible').collapsible({});$('select').material_select();$('.tooltipped').tooltip();$scope.searchRecordOfMeeting()},500,false)});$scope.deleteAgendaPoint=function(agendaPoint){var t={};t.idx=-1;t.agendaPoint=agendaPoint;for(var i=0;i<$scope.recordOfMeeting.AgendaPoints.length;++i){if($scope.recordOfMeeting.AgendaPoints[i].Id==t.agendaPoint.Id){t.idx=i;break}}if(t.idx===-1)return;$scope.toDeleteAgendaPoint=t;$('#deleteAgendaPointModal').openModal();$('#deleteModalButton').focus()};$scope.confirmDeleteAgendaPoint=function(){$('#deleteAgendaPointModal').closeModal();var t=$scope.toDeleteAgendaPoint;$scope.recordOfMeeting.AgendaPoints.splice(t.idx,1);AgendaPointAPI.deleteAgendaPoint(t.agendaPoint.Id,function(err,data){if(!err)return;$scope.recordOfMeeting.AgendaPoints.splice(idx,0,t.agendaPoint)})};$scope.addAgendaPoint=function(){Materialize.updateTextFields();$('#addAgendaPointModal').openModal();$('#toAddTitle').focus()};$scope.confirmAddAgendaPoint=function(){var t={};t.agendaPoint={};angular.copy($scope.toAddAgendaPoint,t.agendaPoint);$('#addAgendaPointModal').closeModal();t.agendaPoint.Status=4;t.agendaPoint.PETianoId=$scope.recordOfMeeting.Ateiro.Id;t.agendaPoint.RecordOfMeetingId=$scope.recordOfMeeting.Id;t.idx=$scope.recordOfMeeting.AgendaPoints.length;$scope.recordOfMeeting.AgendaPoints.push(t.agendaPoint);AgendaPointAPI.addAgendaPoint(t.agendaPoint.Title,t.agendaPoint.Description,t.agendaPoint.PETianoId,t.agendaPoint.RecordOfMeetingId,t.agendaPoint.Status,function(err,data){if(err){$scope.recordOfMeeting.AgendaPoints.splice(t.idx,1)}else{t.agendaPoint.Id=data.Id;$scope.toAddAgendaPoint={};$('.tooltipped').tooltip()}})};$scope.editAteiroAndPresident=function(){$('#petianosModal').openModal()};$scope.confirmEditeAteiroAndPresident=function(){var prevAteiro=$scope.recordOfMeeting.AteiroId,prevPresident=$scope.recordOfMeeting.PresidentId;$('#petianosModal').closeModal();$scope.recordOfMeeting.AteiroId=$('#ateiroSelectDropdown').val();$scope.recordOfMeeting.Ateiro=$scope.PETianosList[$scope.recordOfMeeting.AteiroId];$scope.recordOfMeeting.PresidentId=$('#presidentSelectDropdown').val();$scope.recordOfMeeting.President=$scope.PETianosList[$scope.recordOfMeeting.PresidentId];RecordOfMeetingAPI.updateAteiroOrPresident($scope.recordOfMeeting.Id,$scope.recordOfMeeting.AteiroId,$scope.recordOfMeeting.PresidentId,function(err,data){if(err){$scope.recordOfMeeting.AteiroId=prevAteiro;$scope.recordOfMeeting.Ateiro=$scope.PETianosList[prevAteiro];$scope.recordOfMeeting.PresidentId=prevPresident;$scope.recordOfMeeting.President=$scope.PETianosList[prevPresident]}})};$scope.editAgendaPoint=function(agendaPoint){$scope.editingAgendaPoint=agendaPoint;if(!agendaPoint.ServerTitle)agendaPoint.ServerTitle=agendaPoint.Title;if(!agendaPoint.ServerDescription)agendaPoint.ServerDescription=agendaPoint.Description;$('#editAgendaPointModal').openModal();$timeout(function(){Materialize.updateTextFields()},0);$('#editingDescription').focus()};$scope.confirmEditAgendaPoint=function(){$('#editAgendaPointModal').closeModal();var agendaPoint=$scope.editingAgendaPoint;if(agendaPoint.Title!=agendaPoint.ServerTitle||agendaPoint.Description!=agendaPoint.ServerDescription){var tTitle=agendaPoint.ServerTitle,tDescription=agendaPoint.ServerDescription;agendaPoint.ServerTitle=agendaPoint.Title;agendaPoint.ServerDescription=agendaPoint.Description;AgendaPointAPI.updateAgendaPoint(agendaPoint.Id,agendaPoint.Title,agendaPoint.Description,function(err,data){if(err){agendaPoint.ServerTitle=tTitle;agendaPoint.ServerDescription=tDescription;return}agendaPoint.Title=agendaPoint.ServerTitle=data.Title;agendaPoint.Description=agendaPoint.ServerDescription=data.Description})}};$scope.desafixarAgendaPoint=function(agendaPoint){$('.tooltipped').tooltip('remove');agendaPoint.Status=3;AgendaPointAPI.changeStatus(agendaPoint.Id,3,function(err,data){if(err)agendaPoint.Status=2;$timeout(function(){$('.tooltipped').tooltip()},0,true)})};$scope.fixarAgendaPoint=function(agendaPoint){$('.tooltipped').tooltip('remove');var prevStatus=agendaPoint.Status;agendaPoint.Status=2;AgendaPointAPI.changeStatus(agendaPoint.Id,2,function(err,data){if(err)agendaPoint.Status=prevStatus;$timeout(function(){$('.tooltipped').tooltip()},0,true)})};$scope.saveRecordOfMeeting=function(){$('#recordOfMeetingSavingModal').openModal()};$scope.confirmSaveRecordOfMeeting=function(){$('#recordOfMeetingSavingModal').closeModal();$scope.recordOfMeeting.Status=2;$scope.canOpen=true;RecordOfMeetingAPI.saveRecordOfMeeting($scope.recordOfMeeting.Id,function(err,data){if(err){$scope.recordOfMeeting.Status=1;$scope.canOpen=false}})};$scope.deleteAbsentOrLate=function(absentOrLate){var t={};t.absentOrLate=absentOrLate;t.idx1=-1;for(var i=0;i<$scope.recordOfMeeting.AbsentsOrLates.length;++i){if($scope.recordOfMeeting.AbsentsOrLates[i].Id==absentOrLate.Id){t.idx1=i;break}}if(t.idx1==-1)return;$scope.deletingAbsentOrLateModal=t;$('#deletingAbsentOrLateModal').openModal();$('#deletingAbsentOrLateModalButton').focus()};$scope.confirmDeleteAbsentOrLate=function(){$('#deletingAbsentOrLateModal').closeModal();var t=$scope.deletingAbsentOrLateModal;$scope.recordOfMeeting.AbsentsOrLates.splice(t.idx1,1);$('.tooltipped').tooltip('remove');AbsentOrLateAPI.delete({id:t.absentOrLate.Id},function(){$('.tooltipped').tooltip()},function(err){$scope.recordOfMeeting.AbsentsOrLates.splice(t.idx1,0,t.absentOrLate);$timeout(function(){$('.tooltipped').tooltip()},0,false)})};$scope.addAbsentOrLate=function(type){if($scope.addingAbsentOrLate)$scope.addingAbsentOrLate.Type=type;else $scope.addingAbsentOrLate={Type:type};Materialize.updateTextFields;$('#addAbsentOrLateModal').openModal()};$scope.confirmAddAbsentOrLate=function(){$('#addAbsentOrLateModal').closeModal();var t=$scope.addingAbsentOrLate,u=$scope.recordOfMeeting.AbsentsOrLates;t.PETianoId=$('#absentOrLateSelectDropdown').val();if(!t.PETianoId)return;t.inval=-1;for(var i=0;i<u.length;++i){if(u[i].PETianoId==t.PETianoId){t.inval=i;t.invalPT=u[i];u.splice(i,1);break}}t.idx=u.length;$('.tooltipped').tooltip('remove');u.push(AbsentOrLateAPI.save({Type:t.Type,PETianoId:t.PETianoId,Reason:t.Reason,RecordOfMeetingId:$scope.recordOfMeeting.Id,IsJustified:t.IsJustified},function(data){PETianoService.getPETianoById(data.PETianoId,function(err,PETiano){if(!err){u[t.idx].PETiano=PETiano;$scope.addingAbsentOrLate={};$timeout(function(){$('.tooltipped').tooltip();$('#absentOrLateSelectDropdown').val('');$('select').material_select()},0,true)}})},function(err){u.splice(t.idx,1);if(t.inval!=-1&&(t.inval||t.inval==0))u.splice(t.inval,0,t.invalPT);$timeout(function(){$('.tooltipped').tooltip()},0,true)}))};$scope.createRecordOfMeeting=function(){$('#recordOfMeetingCreatingModal').openModal()};$scope.confirmCreateRecordOfMeeting=function(){$('#recordOfMeetingCreatingModal').closeModal();$http({method:'POST',url:'/api/recordOfMeeting/'}).then(function(result){var data=result.data;data.Date=new Date(data.Date);$scope.recordOfMeeting=data;$scope.UsersAgendaPoints=[];$timeout(function(){$('.collapsible').collapsible({});$('select').material_select();$('.tooltipped').tooltip()},500,false)})};$scope.openDownloadWindow=function(){if($scope.recordOfMeeting.Status===2)window.open('/api/recordOfMeeting/'+$scope.recordOfMeeting.Id+'/download')};$scope.openSearchModal=function(){$('#searchModal').openModal()};$scope.closeSearchModal=function(){$('#searchModal').closeModal()};$scope.searchRecordOfMeeting=function(){var nYear=$('#searchYearSelect').val();var pYear=$scope.selectedYear;$scope.selectedYear=nYear;var pFounds=$scope.recordsFound;$scope.recordsFound=[];$http({method:'GET',url:'/api/recordOfMeeting/search?year='+nYear}).then(function(result){var data=result.data;for(var i=0;i<data.length;++i){data[i].Date=new Date(data[i].Date)}$scope.recordsFound=data},function(err){$scope.recordsFound=pFounds;$scope.selectedYear=pYear})};$scope.loadRecordOfMeeting=function(id){if(!id)return;$('#searchModal').closeModal();$http({method:'GET',url:'/api/recordOfMeeting/'+id}).then(function(result){var data=result.data;data.Date=new Date(data.Date);$scope.recordOfMeeting=data;$timeout(function(){$('.collapsible').collapsible({});$('select').material_select();$('.tooltipped').tooltip()},1000,false)});$http({method:'GET',url:'/api/recordOfMeeting/open'}).then(function(result){$scope.canOpen=result.data.open},function(result){$scope.canOpen=true})};$scope.openNewAgendaPointsModal=function(){$('#addNewAgendaPointModal').openModal();$('ul.tabs').tabs();$('.collapsible').collapsible({});Materialize.updateTextFields()};$scope.addNewAgendaPoint=function(){$scope.toAddNewAgendaPoint.Status=1;var t=$scope.toAddNewAgendaPoint;$scope.toAddNewAgendaPoint={};var tIdx=$scope.UsersAgendaPoints.length;$scope.UsersAgendaPoints.push(t);$http({method:'POST',url:'/api/agendaPoint/create',data:t}).then(function(result){t.Id=result.data.Id;t.PETianoId=result.data.PETianoId;Materialize.updateTextFields()},function(err){$scope.toAddNewAgendaPoint=t;$scope.UsersAgendaPoints.splice(tIdx,1);Materialize.updateTextFields()})};$http({method:'GET',url:'api/agendaPoint/users'}).then(function(result){$scope.UsersAgendaPoints=result.data},function(err){$scope.UsersAgendaPoints=[]})});'use strict';angular.module('Selecao').controller('SelecaoDisplayController',function($scope,SelecaoAPI,EtapaAPI){$scope.selecoes=SelecaoAPI.query({});$scope.openModal=function(modalId){$scope.$evalAsync(Materialize.updateTextFields);$('#'+modalId).openModal()};$scope.addSelecao=function(toAddSelecao){$('#addSelecaoModal').closeModal();$scope.selecoes.push(toAddSelecao=new SelecaoAPI({Description:toAddSelecao.Description,IsOpen:false}));toAddSelecao.$save(function(){$scope.toAddSelecao={}})}});angular.module('Selecao').controller('SelecaoDetailController',function($stateParams,$scope,SelecaoAPI,EtapaAPI){$scope.selecao=SelecaoAPI.get({selecaoId:$stateParams.selecaoId});$scope.openModal=function(modalId){$scope.$evalAsync(Materialize.updateTextFields);$('#'+modalId).openModal()};$scope.addEtapa=function(toAddEtapa){$('#addEtapaModal').closeModal();$scope.selecao.Etapas.push(toAddEtapa=new EtapaAPI({SelecaoId:$scope.selecao.Id,CanUpdate:true,Description:toAddEtapa.Description}));toAddEtapa.$save(function(){$scope.toAddEtapa={}})};$scope.updateSelecaoIsOpen=function(IsOpen){$('#closeSelecaoModal').closeModal();$scope.selecao.IsOpen=IsOpen;$scope.selecao.$save(function(){$scope.selecao=SelecaoAPI.get({selecaoId:$scope.selecao.Id})})}});'use strict';angular.module('SideNav').controller('SideNavController',function($scope,UserAPI,CandidatoAPI){$scope.logout=function(){UserAPI.logout();CandidatoAPI.logout()}});'use strict';angular.module('Candidato').controller('SignupController',function($scope,Upload,CandidatoAPI){$scope.user={};$scope.errMsg='';$scope.isSubmiting=false;$scope.submit=function(){var user=$scope.user;if(user.password!=user.confirmPassword){$scope.errMsg='Senhas n\xE3o conferem!'}else{$scope.isSubmiting=true;Upload.upload({url:'/api/candidato/signup',data:user}).then(function(data){CandidatoAPI.loginNewUser(data);$scope.isSubmiting=false},function(err){$scope.errMsg=err.status+' - '+err.data.message;$scope.isSubmiting=false})}}});'use strict';angular.module('AbsentOrLate').factory('AbsentOrLateAPI',function($resource){return $resource('/api/absentOrLate/:id')});'use strict';angular.module('AgendaPoint').factory('AgendaPointAPI',function($resource,Request){var API={deleteAgendaPoint:Request.send('delete',$resource('/api/agendaPoint/:agendaPointId/delete',{agendaPointId:'@id'})),addAgendaPoint:Request.send('post',$resource('/api/agendaPoint/create')),updateAgendaPoint:Request.send('post',$resource('/api/agendaPoint/:agendaPointId/update',{agendaPointId:'@AgendaPointId'}))};return{deleteAgendaPoint:function deleteAgendaPoint(agendaPointId,done){API.deleteAgendaPoint({agendaPointId:agendaPointId}).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},addAgendaPoint:function addAgendaPoint(title,description,petianoId,recordOfMeetingId,status,done){API.addAgendaPoint({Title:title,Description:description,PETianoId:petianoId,Status:status,RecordOfMeetingId:recordOfMeetingId}).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},updateAgendaPoint:function updateAgendaPoint(agendaPointId,title,description,done){API.updateAgendaPoint({AgendaPointId:agendaPointId,Title:title,Description:description}).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},changeStatus:function changeStatus(agendaPointId,status,done){API.updateAgendaPoint({AgendaPointId:agendaPointId,Status:status}).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})}}});'use strict';angular.module('Calendar').factory('CalendarAPI',function($resource,Request){var API={getEvents:Request.send('query',$resource('/api/calendar')),addEvent:Request.send('post',$resource('/api/calendar/save',{title:'@eventTitle',start:'@eventDate',time:'@eventTime'})),deleteEvent:Request.send('delete',$resource('/api/calendar/:eventId/delete',{eventId:'@eventId'})),updateEvent:Request.send('post',$resource('/api/calendar/:eventId/update',{eventId:'@eventId'}))};return{getEvents:function getEvents(done){API.getEvents().then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},addEvent:function addEvent(eventTitle,eventDate,eventTime,done){API.addEvent({title:eventTitle,start:eventDate,time:eventTime}).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},deleteEvent:function deleteEvent(eventId,done){API.deleteEvent({eventId:eventId}).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},updateEvent:function updateEvent(eventId,eventTitle,eventDate,eventTime,done){API.updateEvent({eventId:eventId,title:eventTitle,start:eventDate,time:eventTime}).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})}}});'use strict';angular.module('Candidato').factory('CandidatoAPI',function(CandidatoService,Request,$state,$resource,$cookies,$rootScope){var API={login:Request.send('get',$resource('/api/candidato/login')),update:Request.send('save',$resource('/api/candidato/update'))};return{login:function login(user,done){CandidatoService.reset();API.login(user).then(function(data){CandidatoService.set(data);$rootScope.user=CandidatoService.user;$state.go('candidato.index');return done&&done(null)},function(err){return done&&done(err)})},logout:function logout(){CandidatoService.reset();$cookies.remove('candidato');$state.go('login')},update:function update(user,done){API.update(user).then(function(data){CandidatoService.set(data);$rootScope.user=CandidatoService.user;return done&&done(null)},function(err){return done&&done(err)})},loginNewUser:function loginNewUser(user,done){CandidatoService.set(user);$rootScope.user=CandidatoService.user;$state.go('candidato');return done&&done(null)}}});'use strict';angular.module('Ideas').factory('IdeasAPI',function($resource,Request){var API={addIdea:Request.send('post',$resource('/api/ideas/create')),getIdeas:Request.send('get',$resource('/api/ideas/')),deleteIdea:Request.send('delete',$resource('/api/ideas/:ideaId/delete',{ideaId:'@id'})),updateIdea:Request.send('post',$resource('/api/ideas/:ideaId/update',{ideaId:'@IdeaId'}))};return{getIdeas:function getIdeas(done){API.getIdeas().then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},addIdea:function addIdea(title,description,done){console.log(API.getIdeas);console.log(API.addIdea);API.addIdea({Title:title,Description:description}).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},updateIdea:function updateIdea(ideaId,title,description,done){API.updateIdea({IdeaId:ideaId,Title:title,Description:description}).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},deleteIdea:function deleteIdea(ideaId,done){API.deleteIdea({ideaId:ideaId}).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})}}});'use strict';angular.module('Finance').factory('PaymentAPI',['Request','UserService','$resource','$cookies',function(Request,UserService,$resource,$cookies){var API={getPayments:Request.send('get',$resource('/api/payment/getPayments')),createPayment:Request.send('save',$resource('/api/payment/createPayment')),getPendingPaymentsPigPet:Request.send('query',$resource('/api/payment/getPendingPaymentsPigPet')),deletePayment:Request.send('remove',$resource('/api/payment/deletePayment')),updatePayment:Request.send('save',$resource('/api/payment/updatePayment')),acceptPayment:Request.send('save',$resource('/api/payment/acceptPayment'))};return{getPayments:function getPayments(done){API.getPayments().then(function(data){return done&&done(null,data.arr)},function(err){return done&&done(err)})},createPayment:function createPayment(payment,done){API.createPayment(payment).then(function(data){return done&&done(null,data)},function(err){return err})},getPendingPaymentsPigPet:function getPendingPaymentsPigPet(done){API.getPendingPaymentsPigPet().then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},deletePayment:function deletePayment(payment,done){API.deletePayment(payment).then(function(){return done&&done()},function(err){return done&&done(err)})},updatePayment:function updatePayment(payment,done){API.updatePayment(payment).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},acceptPayment:function acceptPayment(payment,done){API.acceptPayment(payment).then(function(data){return done&&done(null,data)},function(err){console.log('erro fac');return done&&done(err)})}}}]);'use strict';angular.module('Finance').factory('PenaltyAPI',function(Request,UserService,$resource,$cookies){var API={getPenalties:Request.send('query',$resource('/api/penalty/getPenalties')),getAllPenalties:Request.send('query',$resource('/api/penalty/getAllPenalties')),createPenalty:Request.send('save',$resource('/api/penalty/createPenalty')),deletePenalty:Request.send('remove',$resource('/api/penalty/deletePenalty')),updatePenalty:Request.send('save',$resource('/api/penalty/updatePenalty')),changePenaltyStatus:Request.send('save',$resource('/api/penalty/changePenaltyStatus'))};return{getPenalties:function getPenalties(done){API.getPenalties().then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},getAllPenalties:function getAllPenalties(done){API.getAllPenalties().then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},createPenalty:function createPenalty(penalty,done){API.createPenalty(penalty).then(function(data){return done&&done(null,data)},function(err){return err})},deletePenalty:function deletePenalty(penalty,done){API.deletePenalty(penalty).then(function(){return done&&done()},function(err){return done&&done(err)})},updatePenalty:function updatePenalty(penalty,done){API.updatePenalty(penalty).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},changePenaltyStatus:function changePenaltyStatus(penalty,done){API.changePenaltyStatus(penalty).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})}}});'use strict';angular.module('Finance').factory('PigpetAPI',['Request','UserService','$resource','$cookies',function(Request,UserService,$resource,$cookies){var API={getPigPetBalance:Request.send('get',$resource('/api/pigpet/getPigPetBalance')),updatePigPetBalance:Request.send('save',$resource('/api/pigpet/updatePigPetBalance'))};return{getPigPetBalance:function getPigPetBalance(done){API.getPigPetBalance().then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},updatePigPetBalance:function updatePigPetBalance(pigpet,done){API.updatePigPetBalance(pigpet).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})}}}]);'use strict';angular.module('Finance').factory('PocketAPI',['Request','UserService','$resource','$cookies',function(Request,UserService,$resource,$cookies){var API={getPockets:Request.send('query',$resource('/api/pocket/getPockets')),createPocket:Request.send('save',$resource('/api/pocket/createPocket')),deletePocket:Request.send('delete',$resource('api/pocket/deletePocket')),updatePocket:Request.send('save',$resource('/api/pocket/updatePocket'))};return{getPockets:function getPockets(done){API.getPockets().then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},createPocket:function createPocket(pocket,done){API.createPocket(pocket).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},deletePocket:function deletePocket(pocket,done){API.deletePocket(pocket).then(function(){return done&&done()},function(err){return done&&done(err)})},updatePocket:function updatePocket(pocket,done){API.updatePocket(pocket).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})}}}]);'use strict';angular.module('RecordOfMeeting').factory('RecordOfMeetingAPI',function($resource,Request){var API={getLastRecordOfMeeting:Request.send('get',$resource('/api/recordOfMeeting')),updateAteiroOrPresident:Request.send('post',$resource('/api/recordOfMeeting/updateAteiroOrPresident')),saveRecordOfMeeting:Request.send('post',$resource('/api/recordOfMeeting/save/:RecordOfMeetingId',{RecordOfMeetingId:'@RecordOfMeetingId'}))};return{getLastRecordOfMeeting:function getLastRecordOfMeeting(done){API.getLastRecordOfMeeting().then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},updateAteiroOrPresident:function updateAteiroOrPresident(recordOfMeetingId,ateiroId,presidentId,done){API.updateAteiroOrPresident({Id:recordOfMeetingId,AteiroId:ateiroId,PresidentId:presidentId}).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},saveRecordOfMeeting:function saveRecordOfMeeting(recordOfMeetingId,done){API.saveRecordOfMeeting({RecordOfMeetingId:recordOfMeetingId}).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})}}});'use strict';angular.module('Selecao').factory('SelecaoAPI',function($resource){return $resource('/api/selecao/:selecaoId',{selecaoId:'@Id'},{'participar':{method:'POST',url:'/api/selecao/:selecaoId/participar'}})});angular.module('Selecao').factory('EtapaAPI',function($resource){return $resource('/api/selecao/:selecaoId/etapa/:etapaId',{selecaoId:'@SelecaoId',etapaId:'@Id'})});'use strict';angular.module('Finance').factory('SpendingAPI',['Request','UserService','$resource','$cookies',function(Request,UserService,$resource,$cookies){var API={getSpendings:Request.send('query',$resource('/api/spending/getSpendings')),createSpending:Request.send('save',$resource('/api/spending/createSpending')),deleteSpending:Request.send('delete',$resource('/api/spending/deleteSpending')),updateSpending:Request.send('save',$resource('/api/spending/updateSpending')),acceptSpending:Request.send('save',$resource('/api/spending/acceptSpending'))};return{createSpending:function createSpending(spending,done){API.createSpending(spending).then(function(data){return done&&done(null,data)},function(err){return err})},getSpendings:function getSpendings(done){API.getSpendings().then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},deleteSpending:function deleteSpending(spending,done){API.deleteSpending(spending).then(function(){return done&&done()},function(err){return done&&done(err)})},updateSpending:function updateSpending(spending,done){API.updateSpending(spending).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})},acceptSpending:function acceptSpending(spending,done){API.acceptSpending(spending).then(function(data){return done&&done(null,data)},function(err){return done&&done(err)})}}}]);'use strict';angular.module('PETiano').factory('UserAPI',function(UserService,Request,$state,$resource,$cookies,$rootScope){var API={login:Request.send('get',$resource('/api/petiano/login')),update:Request.send('save',$resource('/api/petiano/update'))};return{login:function login(user,done){UserService.reset();API.login(user).then(function(data){UserService.set(data);$rootScope.user=UserService.user;$state.go('logged.calendar');return done&&done(null)},function(err){return done&&done(err)})},logout:function logout(){UserService.reset();$cookies.remove('user');$state.go('login')},update:function update(user,done){API.update(user).then(function(data){UserService.set(data);$rootScope.user=UserService.user;return done&&done(null)},function(err){return done&&done(err)})}}});'use strict';angular.module('Filters').filter('NoEgressosFilter',function(){return function(input){var results=[];angular.forEach(input,function(petiano){if(petiano.Profile&&petiano.Profile!=4)results.push(petiano)});return results}});'use strict';angular.module('Util').factory('Request',function($q,$timeout,$rootScope){var resolveOrReject=function resolveOrReject(deferred,result){if(result.error){deferred.reject(result.error)}else{deferred.resolve(result)}};var reject=function reject(deferred,result){deferred.reject(result)};return{send:function send(method,API,opts){if(method==='post')method='save';opts=opts||{};function deferAPI(params){var deferred=$q.defer();API[method](params,resolveOrReject.bind(null,deferred),reject.bind(null,deferred));return deferred.promise}return function(params){return deferAPI(params)}}}});
//# sourceMappingURL=maps/bundle.min.js.map
